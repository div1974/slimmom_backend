{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.8",
    "title": "Swagger test",
    "description": "Showing off swagger-ui-express",
    "license": {
      "name": "MIT",
      "url": "https://opensourse.org/licenses/MIT"
    }
  },
  "consumes": ["application/json"],
  "produses": ["application/json"],
  "servers": [{ "url": "https://slimmombeckend.herokuapp.com" }, { "url": "http://localhost:3000" }],
  "tags": [
    {
      "name": "Users",
      "description": "Registry, Auth, Logout endpoints"
    },
   
    {
      "name": "Products",
      "description": "Public Daily Calories and Not recommended products, Search product endpoinds"
    },
   
    {
      "name": "UsersDays",
      "description": "Add and Delete product, Get information for a specific day"
    }
  ],

  "paths": {
    "/api/users/signup": {
      "post": {
        "tags": ["Users"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exist",
            "content": {}
          },
          "500": {
            "description": "Intarnal Server Error (invalid request body)",
            "content": {}
          }
        }
      }
    },

    "/api/users/login": {
      "post": {
        "tags": ["Users"],
        "summary": "User authentication",
        "parameters": [],
        "requestBody": {
          "description": "Authentication's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request (Login and Password fields are required)",
            "content": {}
          },
          "401": {
            "description": "Invalid creadentials (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "This email was not found",
            "content": {}
          }
        }
      }
    },

    "/api/users/logout": {
      "post": {
        "tags": ["Users"],
        "summary": "User logout",
        "parameters": [
          {
            "in": "Authorization",
            "name": "Authorization",
            "type": "string",
            "description": "Токен выданый текущему пользователю",
            "required": true
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "Successful operation - пользователь разлогинен",
            "content": {}
          },
          "403": {
            "description": "Forbidden - отсутствует заголовок с токеном авторизации",
            "content": {}
          }
        }
      }
    },

    "/api/users/private": {
      "post": {
        "tags": ["Users"],
        "summary": "PRIVATE Daily calories and not recommended products",
        "description": "Параметры запроса - динамические (их можно изменить). Они не обязательны, но без них не будет пагинации",
        "required": true,
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "type": "string",
            "description": "Номер страницы"
            
          },
          {
            "in": "query",
            "name": "limit",
            "type": "string",
            "description": "Количество отображаемых продуктов на странице"
            
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Daily calories object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrivateDailyCalcProductsRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrivateDailyCalcProductsResponse"
              }
            }
          }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "500": {
            "description": "Bad request (Введите правильную группу крови (1 - 4))",
            "content": {}
          }
        }
      }
    },

    "/api/products": {
      "post": {
        "tags": ["Products"],
        "summary": "PUBLIC Daily calories and not recommended products",
        "description": "Параметры запроса - динамические (их можно изменить). Они не обязательны, но без них не будет пагинации",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "type": "string",
            "description": "Введите какую страницу хотите получить"
            
          },
          {
            "in": "query",
            "name": "limit",
            "type": "string",
            "description": "Введите количество отображаемых продуктов на странице"
            
          }
        ],
        "requestBody": {
          "description": "Daily calories object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublicDailyCalcProductsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublicDailyCalcProductsResponse"
              }
            }
          }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          }
        }
      }
    },

    "/api/products/foods": {
      "get": {
        "tags": ["Products"],
        "summary": "Search by query",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "type": "string",
            "description": "Введите название продукта"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string",
            "description": "Номер страницы"
            
          },
          {
            "in": "query",
            "name": "limit",
            "type": "string",
            "description": "Количество отображаемых продуктов на странице"
            
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchProductsResponse"
              }
            }
          }
          },
          "204": {
            "description": "Successful operation. No content",
            "products": {}
          },
          "500": {
            "description": "Bad request by query"
          }
        }
      }
    },
    
    "/api/usersDays/{productId}": {
      "post": {
        "tags": ["UsersDays"],
        "summary": "Adding a product on a specific day",
        "required": true,
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "type": "integer",
            "description": "Уникальный идентификатор продукта",
            "required": true
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Product's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddProductRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product added successfully",
            "content": {
              "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddProductResponse"
              }
            }
            }
          },
          "400": {
            "description": "Bad requst (invalid request params)",
            "content": {}
          },
          "403": {
            "description": "Forbidden - отсутствует заголовок с токеном авторизации",
            "content": {}
          }
        }
      }
    },

    "/api/usersDays/{delProductId}": {
      "delete": {
        "tags": ["UsersDays"],
        "summary": "Remove a product on a specific day",
        "required": true,
        "parameters": [
          {
            "in": "path",
            "name": "delProductId",
            "type": "integer",
            "description": "Уникальный идентификатор продукта",
            "required": true
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Product's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveProductRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product remove successfully",
            "content": {
              "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveProductResponse"
              }
            }
            }
          },
          "400": {
            "description": "Bad requst (invalid request params)",
            "content": {}
          },
          "403": {
            "description": "Forbidden - отсутствует заголовок с токеном авторизации",
            "content": {}
          }
        }
      }
    },

    "/api/usersDays": {
      "post": {
        "tags": ["UsersDays"],
        "summary": "User information for a specific day ",
        "required": true,
        "parameters": [
          
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Users day object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDayProductRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User's day was found",
            "content": {
              "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDayProductResponse"
              }
            }
            }
          },
          "400": {
            "description": "Bad requst (invalid request params)",
            "content": {}
          },
          "403": {
            "description": "Forbidden - отсутствует заголовок с токеном авторизации",
            "content": {}
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "login", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "User"
          },
          "login": {
            "type": "string",
            "description": "User's login",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "User"
          },
           "login": {
            "type": "string",
            "description": "User's login",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "hashed password"
          }
        },
        "example": {
          "status": "Success",
          "code": 201,
          "message": "User with name: 'Roman' added successfully!",
          "data": {
            "id": "60a68ec360b8d40858e3f15b",
            "name": "Roman",
            "login": "user@gmail.com",
            "password": "$2a$06$qANrU55.gBBgLwMroVVGC.2C9J0IjOGnISKB12KNTeonCJDtYhH9W"
          }
        }
      },

      "AuthenticationRequest": {
        "type": "object",
        "required": ["login", "password"],
        "properties": {
          "login": {
            "type": "string",
            "description": "User's login",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "AuthenticationResponse": {
        "type": "object",
        "properties": {
          "login": {
            "type": "string",
            "description": "User's login",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "hashed password"
          }
        },
        "example": {
          "status": "Success",
          "code": 200,
          "message": "User with login: 'user@gmail.com' logged in!",
          "data": {
          "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYwYTY4ZWMzNjBiOGQ0MDg1OGUzZjE1YiIsImlhdCI6MTYyMTUyODM5OSwiZXhwIjoxNjIxNjE0Nzk5fQ.4nfCGSY1JsB1NX-N4P_lpZQ6AzaDOLITflE6lbEyNrM"
          }
        }
      },

      "LogoutRequest": {
        "type": "object",
        "description": "No content",
        "example": "Bearer token"
      },
      "LogoutResponse": {
        "type": "object",
        "description": "No content",
        "example": "Token: null"
      },

      "PublicDailyCalcProductsRequest": {
        "type": "object",
        "required": ["height", "age", "currentWeight", "desiredWeight", "groupBloodNotAllowed"],
        "properties": {
          "height": {
            "type": "string"
          },
          "age": {
            "type": "string" 
          },
          "currentWeight": {
            "type": "string" 
          },
          "desiredWeight": {
            "type": "string" 
          },
          "groupBloodNotAllowed": {
            "type": "number"
          }
        },
        "example": {
              "height": "180",
              "age": "30",
              "currentWeight": "70",
              "desiredWeight": "68" ,
              "groupBloodNotAllowed": 2
            }
      },
      "PublicDailyCalcProductsResponse": {
        "type": "object",
        "items": {
          "properties": {
            "title": {
              "type": "string",
              "description": "Not recommended products",
              "example": {"ru": "Арахис сушеный", "ua": "Арахіс сушений"}
            }
          }
        },
        "example": {
          "status": "Success",
          "code": 200,
          "message": "Not recommended products",
          "products": [
            {
              "id": "5d51694902b2373622ff5c86",
              "title": {
                "ru": "Бразильский орех",
                "ua": "Бразильський горіх"
              },
              "calories": 656
            }
          ]
        }
      },

      "PrivateDailyCalcProductsRequest": {
        "type": "object",
        "required": ["height", "age", "currentWeight", "desiredWeight", "groupBloodNotAllowed"],
        "properties": {
          "height": {
            "type": "string"
          },
          "age": {
            "type": "string" 
          },
          "currentWeight": {
            "type": "string" 
          },
          "desiredWeight": {
            "type": "string" 
          },
          "groupBloodNotAllowed": {
            "type": "number"
          }
        },
        "example": {
              "height": "180",
              "age": "30",
              "currentWeight": "70",
              "desiredWeight": "68" ,
              "groupBloodNotAllowed": 2
            }
      },
      "PrivateDailyCalcProductsResponse": {
        "type": "object",
        "items": {
          "properties": {
            "title": {
              "type": "string",
              "description": "Not recommended products",
              "example": {"ru": "Арахис сушеный", "ua": "Арахіс сушений"}
            }
          }
        },
        "example": {
          "status": "Success",
          "code": 201,
          "ResponseBody": {
            "user": "60bcfc1ce0edae14400ee0dd",
            "UpdatedDailyCalorieIntake": 1494,
            "UpdatedNotAllowedFoods": [
              {
                "id": "5d51694902b2373622ff5909",
                "title": {
                  "ru": "Азу",
                  "ua": "Азу"
                },
                "calories": 214
              },
              {
                "id": "5d51694902b2373622ff590a",
                "title": {
                  "ru": "Антрекот",
                  "ua": "Антрекот"
                },
                "calories": 396
              },
              {
                "id": "5d51694902b2373622ff590b",
                "title": {
                  "ru": "Антрекот из говядины",
                  "ua": "Антрекот з яловичини"
                },
                "calories": 220
              },
              {
                "id": "5d51694902b2373622ff590c",
                "title": {
                  "ru": "Антрекот из свинины",
                  "ua": "Антрекот зі свинини"
                },
                "calories": 210
              },
              {
                "id": "5d51694802b2373622ff566e",
                "title": {
                  "ru": "Аньолотти",
                  "ua": "Аньолотті"
                },
                "calories": 344
              }
            ]
          }
        }
      },

      "SearchProductsResponse": {
        "example": {
          "status": "Success",
          "code": 200,
          "message": "Product found",
          "products": [
            {
              "id": "5d51694902b2373622ff5ef5",
              "title": {
                "ru": "Кофе Maxwell House гранулированный сухой",
                "ua": "Кава Maxwell House гранульований сухий"
              },
              "calories": 100
            },
            {
              "id": "5d51694902b2373622ff5ef6",
              "title": {
                "ru": "Кофе Maxwell House растворимый сухой",
                "ua": "Кава Maxwell House розчинна суха"
              },
              "calories": 100
            }
          ]
        }
      },

      "AddProductRequest": {
        "type": "object",
        "required": ["day", "weight"],
        "properties": {
          "day": {
            "type": "string",
            "description": "Specific day",
            "example": "2021/05/28"
          },
          "weight": {
            "type": "number",
            "description": "Product's weight",
            "example": 100
          }
        }
      },
      "AddProductResponse": {
        "type": "object",
        "properties": {
          "day": {
            "type": "string",
            "description": "Specific day",
            "example": "2021/05/28"
          },
          "weight": {
            "type": "string",
            "description": "Product's weight",
            "example": "100"
          }
        },
        "example": {
          "status": "Success",
          "code": 201,
          "message": "Product id: 5d51694802b2373622ff5530 added successfully",
          "addProd": {
            "day": "28-05-2021",
            "_id": "60bcfd5d119b8739a476df49",
            "foods": [
              {
                "_id": "5d51694802b2373622ff5530",
                "title": {
                  "ua": "Омлет із сиром",
                  "ru": "Омлет с сыром"
                },
                "weight": 100,
                "cal": 342
              }
            ],
            "owner": "60bcfc1ce0edae14400ee0dd",
            "summary": {
              "rest": 1152,
              "intake": 342,
              "dailyRate": 1494,
              "ratio2Norma": "23"
            }
          } 
        }
      },

      "RemoveProductRequest": {
        "type": "object",
        "required": ["day"],
        "properties": {
          "day": {
            "type": "string",
            "description": "Specific day",
            "example": "2021/05/28"
          }
        }
      },
      "RemoveProductResponse": {
        "type": "object",
        "properties": {
          "day": {
            "type": "string",
            "description": "Specific day",
            "example": "2021/05/28"
          }
        },
        "example": {
          "status": "Success",
          "code": 200,
          "message": "Product id: 5d51694802b2373622ff5530 removed successfully",
          "delProduct": {
            "summary": {
            "rest": 1494,
            "intake": 0,
            "dailyRate": 1494,
            "ratio2Norma": 0
            },
            "day": "28-05-2021",
            "_id": "60bcfd5d119b8739a476df49",
            "foods": [],
            "owner": "60bcfc1ce0edae14400ee0dd"
          }
        }
      },

      "UserDayProductRequest": {
        "type": "object",
        "required": ["day"],
        "properties": {
          "day": {
            "type": "string",
            "description": "Specific day",
            "example": "2021/05/28"
          }
        }
      },
      "UserDayProductResponse": {
        "type": "object",
        "properties": {
          "day": {
            "type": "string",
            "description": "Specific day",
            "example": "2021/05/28"
          }
        },
        "example": {
          "status": "Success",
          "code": 200,
          "message": "User's day was found",
          "findUserByDay": {
            "summary": {
              "rest": 1152,
              "intake": 342,
              "dailyRate": 1494,
              "ratio2Norma": "23"
            },
            "day": "28-05-2021",
            "_id": "60bcfd5d119b8739a476df49",
            "foods": [
              {
                "title": {
                  "ua": "Омлет із сиром",
                  "ru": "Омлет с сыром"
                },
                "_id": "5d51694802b2373622ff5530",
                "weight": 100,
                "cal": 342
              }
            ],
            "owner": "60bcfc1ce0edae14400ee0dd"
          }
        }
      }
    },


    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}